/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mycom.utils;

import com.itextpdf.kernel.colors.ColorConstants;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.*;
import com.itextpdf.layout.*;
import com.itextpdf.layout.borders.SolidBorder;
import com.itextpdf.layout.element.*;
import com.itextpdf.layout.property.TextAlignment;
import java.io.File;
import java.io.IOException;
//import com.itextpdf.io.image.*;
import javax.swing.JTable;
import mycom.config.SystemConfig;
/**
 *
 * @author sheaw
 */
public class ReportPDFExporter {
    public static String filePath(String fileName, String folderPath) {
        File dir = new File(folderPath);
        if (!dir.exists()) {
            dir.mkdirs();
        }
        String filePath = folderPath + "\\" + fileName + ".pdf";
        return filePath;
    }

    public static boolean exportPPEInventoryReport(String filePath, String managerName, String datetime, JTable itemTable) throws IOException {
        try {
            PdfWriter writer = new PdfWriter(filePath);
            PdfDocument pdf = new PdfDocument(writer);
            Document document = new Document(pdf);

            // *1️⃣ Fonts*
            PdfFont boldFont = PdfFontFactory.createFont("Helvetica-Bold");
            PdfFont normalFont = PdfFontFactory.createFont("Helvetica");

            // *2️⃣ Title with horizontal line*
            document.add(new Paragraph("PPE Inventory Report")
                    .setFont(boldFont)
                    .setFontSize(16)
                    .setTextAlignment(TextAlignment.CENTER)
                    .setMarginBottom(5));

            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(10));

            // *3️⃣ Report Introduction Box*
            Table introTable = new Table(1).useAllAvailableWidth();
            introTable.addCell(new Cell().add(new Paragraph("A report of all PPE items with their available quantities, sorted in ascending order by item code."))
                    .setBorder(new SolidBorder(ColorConstants.BLACK, 1))
                    .setPadding(20));
            document.add(introTable.setMarginBottom(20));

            // *4️⃣ Manager Details Table*
            Table detailsTable = new Table(new float[]{6, 1, 24}).useAllAvailableWidth();
            detailsTable.addCell(new Cell().add(new Paragraph("Generated by ")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(":")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(managerName)).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph("Date ")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(":")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(datetime)).setBorder(null));
            document.add(detailsTable.setMarginBottom(25));

            // *5️⃣ Inventory Table Heading*
            document.add(new Paragraph("Inventory Details:")
                    .setFont(boldFont)
                    .setFontSize(14)
                    .setMarginBottom(5));

            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(10));

            // *6️⃣ Inventory Table*
            if (itemTable != null) {
                Table pdfTable = new Table(itemTable.getColumnCount()).useAllAvailableWidth();

                // *Table Headers*
                for (int i = 0; i < itemTable.getColumnCount(); i++) {
                    pdfTable.addHeaderCell(new Cell().add(new Paragraph(itemTable.getColumnName(i))
                            .setFont(boldFont).setTextAlignment(TextAlignment.CENTER)));
                }

                // *Table Data*
                for (int i = 0; i < itemTable.getRowCount(); i++) {
                    for (int j = 0; j < itemTable.getColumnCount(); j++) {
                        pdfTable.addCell(new Cell().add(new Paragraph(itemTable.getValueAt(i, j).toString()).setTextAlignment(TextAlignment.CENTER)));
                    }
                }

                document.add(pdfTable);
            }

            document.close();
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }

    
    public static boolean exportLowStockReport(String filePath, String managerName, String datetime, JTable lowStockTable) throws IOException {
        try {
            PdfWriter writer = new PdfWriter(filePath);
            PdfDocument pdf = new PdfDocument(writer);
            Document document = new Document(pdf);

            // *1️⃣ Fonts*
            PdfFont boldFont = PdfFontFactory.createFont("Helvetica-Bold");
            PdfFont normalFont = PdfFontFactory.createFont("Helvetica");

            // *2️⃣ Title with horizontal line*
            document.add(new Paragraph("PPE Inventory Low Stock Report")
                    .setFont(boldFont)
                    .setFontSize(16)
                    .setTextAlignment(TextAlignment.CENTER)
                    .setMarginBottom(5));

            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(10));

            // *3️⃣ Report Introduction Box*
            Table introTable = new Table(1).useAllAvailableWidth();
            introTable.addCell(new Cell().add(new Paragraph("A report of PPE items with stock quantities below the threshold of " + String.valueOf(SystemConfig.thresholdQuantity) +" boxes."))
                    .setBorder(new SolidBorder(ColorConstants.BLACK, 1))
                    .setPadding(20));
            document.add(introTable.setMarginBottom(20));

            // *4️⃣ Manager Details Table*
            Table detailsTable = new Table(new float[]{6, 1, 24}).useAllAvailableWidth();
            detailsTable.addCell(new Cell().add(new Paragraph("Generated by ")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(":")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(managerName)).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph("Date ")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(":")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(datetime)).setBorder(null));
            document.add(detailsTable.setMarginBottom(25));

            // *5️⃣ Inventory Table Heading*
            document.add(new Paragraph("Low Stock Records:")
                    .setFont(boldFont)
                    .setFontSize(14)
                    .setMarginBottom(5));

            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(10));

            // *6️⃣ Inventory Table*
            if (lowStockTable != null) {
                Table pdfTable = new Table(lowStockTable.getColumnCount()).useAllAvailableWidth();

                // *Table Headers*
                for (int i = 0; i < lowStockTable.getColumnCount(); i++) {
                    pdfTable.addHeaderCell(new Cell().add(new Paragraph(lowStockTable.getColumnName(i))
                            .setFont(boldFont).setTextAlignment(TextAlignment.CENTER)));
                }

                // *Table Data*
                for (int i = 0; i < lowStockTable.getRowCount(); i++) {
                    for (int j = 0; j < lowStockTable.getColumnCount(); j++) {
                        pdfTable.addCell(new Cell().add(new Paragraph(lowStockTable.getValueAt(i, j).toString()).setTextAlignment(TextAlignment.CENTER)));
                    }
                }

                document.add(pdfTable);
            }

            document.close();
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
    
    public static boolean exportPPEReceivedReport(String filePath, String managerName, String startDate, String endDate, JTable totalItemReceivedTable, JTable itemReceivedTable) throws IOException {
        try {
            PdfWriter writer = new PdfWriter(filePath);
            PdfDocument pdf = new PdfDocument(writer);
            Document document = new Document(pdf);

            // *1️⃣ Fonts*
            PdfFont boldFont = PdfFontFactory.createFont("Helvetica-Bold");
            PdfFont normalFont = PdfFontFactory.createFont("Helvetica");

            // *2️⃣ Title with horizontal line*
            document.add(new Paragraph("PPE Items Received Report")
                    .setFont(boldFont)
                    .setFontSize(16)
                    .setTextAlignment(TextAlignment.CENTER)
                    .setMarginBottom(5));

            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(10));

            // *3️⃣ Report Introduction Box*
            Table introTable = new Table(1).useAllAvailableWidth();
            introTable.addCell(new Cell().add(new Paragraph("A report of PPE items received during the specified period." ))
                    .setBorder(new SolidBorder(ColorConstants.BLACK, 1))
                    .setPadding(20));
            document.add(introTable.setMarginBottom(20));

            // *4️⃣ Manager Details Table*
            Table detailsTable = new Table(new float[]{6, 1, 24}).useAllAvailableWidth();
            detailsTable.addCell(new Cell().add(new Paragraph("Generated by ")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(":")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(managerName)).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph("Start Date ")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(":")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(startDate)).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph("End Date ")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(":")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(endDate)).setBorder(null));
            document.add(detailsTable.setMarginBottom(25));
            
            // Total Item Received Table Heading
            document.add(new Paragraph("Total PPE Items Received:")
                    .setFont(boldFont)
                    .setFontSize(14)
                    .setMarginBottom(5));

            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(10));

            // Total Item Received Table
            if (totalItemReceivedTable != null) {
                Table pdfTable1 = new Table(totalItemReceivedTable.getColumnCount()).useAllAvailableWidth();

                // Table Headers
                for (int i = 0; i < totalItemReceivedTable.getColumnCount(); i++) {
                    pdfTable1.addHeaderCell(new Cell().add(new Paragraph(totalItemReceivedTable.getColumnName(i))
                            .setFont(boldFont).setTextAlignment(TextAlignment.CENTER)));
                }

                // Table Data
                for (int i = 0; i < totalItemReceivedTable.getRowCount(); i++) {
                    for (int j = 0; j < totalItemReceivedTable.getColumnCount(); j++) {
                        pdfTable1.addCell(new Cell().add(new Paragraph(totalItemReceivedTable.getValueAt(i, j).toString()).setTextAlignment(TextAlignment.CENTER)));
                    }
                }
                document.add(pdfTable1);
            }
            
            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(25));

            // Transacction Table Heading
            document.add(new Paragraph("PPE Items Received Transactions:")
                    .setFont(boldFont)
                    .setFontSize(14)
                    .setMarginBottom(5));

            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(10));

            // Transaction Table
            if (itemReceivedTable != null) {
                Table pdfTable = new Table(itemReceivedTable.getColumnCount()).useAllAvailableWidth();

                // Table Headers
                for (int i = 0; i < itemReceivedTable.getColumnCount(); i++) {
                    pdfTable.addHeaderCell(new Cell().add(new Paragraph(itemReceivedTable.getColumnName(i))
                            .setFont(boldFont).setTextAlignment(TextAlignment.CENTER)));
                }

                // Table Data
                for (int i = 0; i < itemReceivedTable.getRowCount(); i++) {
                    for (int j = 0; j < itemReceivedTable.getColumnCount(); j++) {
                        pdfTable.addCell(new Cell().add(new Paragraph(itemReceivedTable.getValueAt(i, j).toString()).setTextAlignment(TextAlignment.CENTER)));
                    }
                }

                document.add(pdfTable);
            }

            document.close();
            return true;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
    
    public static boolean exportPPEDispatchedReport(String filePath, String managerName, String startDate, String endDate, JTable totalItemDispatchedTable, JTable itemDispatchedTable) throws IOException {
        try {
            PdfWriter writer = new PdfWriter(filePath);
            PdfDocument pdf = new PdfDocument(writer);
            Document document = new Document(pdf);

            // *1️⃣ Fonts*
            PdfFont boldFont = PdfFontFactory.createFont("Helvetica-Bold");
            PdfFont normalFont = PdfFontFactory.createFont("Helvetica");

            // *2️⃣ Title with horizontal line*
            document.add(new Paragraph("PPE Items Dispatched Report")
                    .setFont(boldFont)
                    .setFontSize(16)
                    .setTextAlignment(TextAlignment.CENTER)
                    .setMarginBottom(5));

            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(10));

            // *3️⃣ Report Introduction Box*
            Table introTable = new Table(1).useAllAvailableWidth();
            introTable.addCell(new Cell().add(new Paragraph("A report of PPE items dispatched during the specified period." ))
                    .setBorder(new SolidBorder(ColorConstants.BLACK, 1))
                    .setPadding(20));
            document.add(introTable.setMarginBottom(20));

            // *4️⃣ Manager Details Table*
            Table detailsTable = new Table(new float[]{6, 1, 24}).useAllAvailableWidth();
            detailsTable.addCell(new Cell().add(new Paragraph("Generated by ")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(":")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(managerName)).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph("Start Date ")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(":")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(startDate)).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph("End Date ")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(":")).setBorder(null));
            detailsTable.addCell(new Cell().add(new Paragraph(endDate)).setBorder(null));
            document.add(detailsTable.setMarginBottom(25));
            
            // Total Item Dispatched Table Heading
            document.add(new Paragraph("Total PPE Items Received:")
                    .setFont(boldFont)
                    .setFontSize(14)
                    .setMarginBottom(5));

            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(10));

            // Total Item Received Table
            if (totalItemDispatchedTable != null) {
                Table pdfTable1 = new Table(totalItemDispatchedTable.getColumnCount()).useAllAvailableWidth();

                // Table Headers
                for (int i = 0; i < totalItemDispatchedTable.getColumnCount(); i++) {
                    pdfTable1.addHeaderCell(new Cell().add(new Paragraph(totalItemDispatchedTable.getColumnName(i))
                            .setFont(boldFont).setTextAlignment(TextAlignment.CENTER)));
                }

                // Table Data
                for (int i = 0; i < totalItemDispatchedTable.getRowCount(); i++) {
                    for (int j = 0; j < totalItemDispatchedTable.getColumnCount(); j++) {
                        pdfTable1.addCell(new Cell().add(new Paragraph(totalItemDispatchedTable.getValueAt(i, j).toString()).setTextAlignment(TextAlignment.CENTER)));
                    }
                }
                document.add(pdfTable1);
            }
            
            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(25));

            // Transaction Table Heading
            document.add(new Paragraph("PPE Items Dispatched Transactions:")
                    .setFont(boldFont)
                    .setFontSize(14)
                    .setMarginBottom(5));

            document.add(new Paragraph("")
                    .setFont(normalFont)
                    .setFontSize(10)
                    .setMarginBottom(10));

            // Transaction Table
            if (itemDispatchedTable != null) {
                Table pdfTable = new Table(itemDispatchedTable.getColumnCount()).useAllAvailableWidth();

                // Table Headers
                for (int i = 0; i < itemDispatchedTable.getColumnCount(); i++) {
                    pdfTable.addHeaderCell(new Cell().add(new Paragraph(itemDispatchedTable.getColumnName(i))
                            .setFont(boldFont).setTextAlignment(TextAlignment.CENTER)));
                }

                // Table Data
                for (int i = 0; i < itemDispatchedTable.getRowCount(); i++) {
                    for (int j = 0; j < itemDispatchedTable.getColumnCount(); j++) {
                        pdfTable.addCell(new Cell().add(new Paragraph(itemDispatchedTable.getValueAt(i, j).toString()).setTextAlignment(TextAlignment.CENTER)));
                    }
                }

                document.add(pdfTable);
            }

            document.close();
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
}
