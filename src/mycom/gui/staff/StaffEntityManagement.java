/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mycom.gui.staff;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import mycom.gui.Admin.*;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import mycom.controllers.UserController;
import mycom.models.Hospital;
import mycom.models.Supplier;
import mycom.services.HospitalManagement;
import mycom.services.SupplierManagement;
import mycom.services.UserManagement;
import mycom.utils.WordProcessing;

/**
 *
 * @author sheaw
 */
public class StaffEntityManagement extends javax.swing.JInternalFrame {
    UserController usrCtrl;
    /**
     * Creates new form AdminUserManagement
     */
    public StaffEntityManagement(UserController usrCtrl) {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null); // set the top frame thingy null
        
        this.usrCtrl = usrCtrl;
        if (this.usrCtrl.getActiveUser().type.equalsIgnoreCase("super admin")) {
            this.usrCtrl.updateActiveUser(UserManagement.getSuperAdmin());
        } else {
            this.usrCtrl.updateActiveUser(UserManagement.getUserById(this.usrCtrl.getActiveUser().getId()));
        }
        loadSuppliers();
        loadHospitals();
    }
    
    public void loadSuppliers() {
        DefaultTableModel model = (DefaultTableModel) supplierTable.getModel();
        model.setRowCount(0);
        List<Supplier> allSuppliers = SupplierManagement.getAllSuppliers();
        System.out.println(allSuppliers);
        for (Supplier supplier : allSuppliers) {
            String[] supplierData = {supplier.getCode(), WordProcessing.capitalizeEachWord(supplier.getName()), supplier.getContact(), supplier.getAddress()};
            model.addRow(supplierData);
        }
        supplierTable.repaint();
        supplierTable.revalidate();
    }

    public void loadHospitals() {
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        model.setRowCount(0);
        List<Hospital> allHospitals = HospitalManagement.getAllHospitals();
        for (Hospital hospital : allHospitals) {
            String[] hospitalData = {hospital.getCode(), WordProcessing.capitalizeEachWord(hospital.getName()), hospital.getContact(), hospital.getAddress()};
            model.addRow(hospitalData);
        }
        hospitalTable.repaint();
        hospitalTable.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        supplierManagementTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        supplierTable = new javax.swing.JTable();
        supplierSearchBar = new javax.swing.JTextField();
        supplierSearchButton = new javax.swing.JButton();
        supplierSortButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        supplierName = new javax.swing.JTextField();
        supplierContact = new javax.swing.JTextField();
        jScrollPane11 = new javax.swing.JScrollPane();
        supplierAddress = new javax.swing.JTextArea();
        addSupplierButton = new javax.swing.JButton();
        modifySupplierButton = new javax.swing.JButton();
        deleteSupplierButton = new javax.swing.JButton();
        supplierSaveButton = new javax.swing.JButton();
        supplierResetButton = new javax.swing.JButton();
        hospitalManagementTab = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        hospitalSearchBar = new javax.swing.JTextField();
        hospitalSearchButton = new javax.swing.JButton();
        hospitalSortButton = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        hospitalName = new javax.swing.JTextField();
        hospitalContact = new javax.swing.JTextField();
        jScrollPane13 = new javax.swing.JScrollPane();
        hospitalAddress = new javax.swing.JTextArea();
        addHospitalButton = new javax.swing.JButton();
        modifyHospitalButton = new javax.swing.JButton();
        deleteHospitalButton = new javax.swing.JButton();
        hospitalSaveButton = new javax.swing.JButton();
        hospitalResetButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(770, 642));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setAutoscrolls(true);
        jPanel1.setPreferredSize(new java.awt.Dimension(770, 642));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(770, 642));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(770, 642));

        supplierManagementTab.setBackground(new java.awt.Color(255, 255, 255));
        supplierManagementTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setPreferredSize(new java.awt.Dimension(770, 642));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(770, 1015));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Supplier Management");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        supplierTable.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        supplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SUPPLIER CODE", "SUPPLIER NAME", "CONTACT", "ADDRESS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        supplierTable.setAutoscrolls(false);
        supplierTable.setEditingRow(0);
        supplierTable.setGridColor(new java.awt.Color(255, 255, 255));
        supplierTable.setIntercellSpacing(new java.awt.Dimension(20, 5));
        supplierTable.setRowHeight(40);
        jScrollPane10.setViewportView(supplierTable);

        jPanel2.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 158, 670, 271));

        supplierSearchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        supplierSearchBar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20)));
        jPanel2.add(supplierSearchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 89, 351, 38));

        supplierSearchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        supplierSearchButton.setText("Search");
        supplierSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierSearchButtonActionPerformed(evt);
            }
        });
        jPanel2.add(supplierSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 89, 110, 38));

        supplierSortButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        supplierSortButton.setText("Sort by Code");
        supplierSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierSortButtonActionPerformed(evt);
            }
        });
        jPanel2.add(supplierSortButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, -1, 38));

        jPanel10.setBackground(new java.awt.Color(230, 230, 230));
        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray));

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Entity Details");

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setText("Supplier Name");

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel36.setText(":");

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setText("Supplier Contact");

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel38.setText(":");

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setText("Supplier Address");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setText(":");

        supplierName.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        supplierName.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20)));

        supplierContact.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        supplierContact.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20)));

        jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        supplierAddress.setColumns(20);
        supplierAddress.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        supplierAddress.setRows(5);
        supplierAddress.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20)));
        jScrollPane11.setViewportView(supplierAddress);

        addSupplierButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addSupplierButton.setText("Add");
        addSupplierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSupplierButtonActionPerformed(evt);
            }
        });

        modifySupplierButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modifySupplierButton.setText("Modify");
        modifySupplierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifySupplierButtonActionPerformed(evt);
            }
        });

        deleteSupplierButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteSupplierButton.setText("Delete");
        deleteSupplierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSupplierButtonActionPerformed(evt);
            }
        });

        supplierSaveButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        supplierSaveButton.setText("Save");
        supplierSaveButton.setEnabled(false);
        supplierSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierSaveButtonActionPerformed(evt);
            }
        });

        supplierResetButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        supplierResetButton.setText("Reset");
        supplierResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel37)
                                .addComponent(jLabel35))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                                .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(supplierName, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                                .addComponent(supplierContact)))
                        .addGroup(jPanel10Layout.createSequentialGroup()
                            .addComponent(addSupplierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(modifySupplierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(supplierSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(30, 30, 30)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(supplierResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(deleteSupplierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(supplierName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(supplierContact, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel39)
                        .addComponent(jLabel40))
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addSupplierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteSupplierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(modifySupplierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(supplierSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supplierResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 472, 670, -1));

        jScrollPane3.setViewportView(jPanel2);

        supplierManagementTab.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, -1));

        jTabbedPane1.addTab("Supplier Management", supplierManagementTab);

        hospitalManagementTab.setBackground(new java.awt.Color(255, 255, 255));
        hospitalManagementTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setBorder(null);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setPreferredSize(new java.awt.Dimension(770, 642));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(770, 1015));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Hospital Management");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        hospitalTable.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HOSPITAL CODE", "HOSPITAL NAME", "CONTACT", "ADDRESS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hospitalTable.setAutoscrolls(false);
        hospitalTable.setEditingRow(0);
        hospitalTable.setGridColor(new java.awt.Color(255, 255, 255));
        hospitalTable.setIntercellSpacing(new java.awt.Dimension(20, 5));
        hospitalTable.setRowHeight(40);
        jScrollPane12.setViewportView(hospitalTable);

        jPanel3.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 158, 670, 271));

        hospitalSearchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hospitalSearchBar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20)));
        jPanel3.add(hospitalSearchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 89, 351, 38));

        hospitalSearchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hospitalSearchButton.setText("Search");
        hospitalSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalSearchButtonActionPerformed(evt);
            }
        });
        jPanel3.add(hospitalSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 89, 110, 38));

        hospitalSortButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hospitalSortButton.setText("Sort by Code");
        hospitalSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalSortButtonActionPerformed(evt);
            }
        });
        jPanel3.add(hospitalSortButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, -1, 38));

        jPanel11.setBackground(new java.awt.Color(230, 230, 230));
        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray));

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Entity Details");

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setText("Hospital Name");

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel43.setText(":");

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel44.setText("Hospital Contact");

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel45.setText(":");

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel46.setText("Hospital Address");

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel47.setText(":");

        hospitalName.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        hospitalName.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20)));

        hospitalContact.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        hospitalContact.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20)));

        jScrollPane13.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        hospitalAddress.setColumns(20);
        hospitalAddress.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        hospitalAddress.setRows(5);
        hospitalAddress.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20)));
        jScrollPane13.setViewportView(hospitalAddress);

        addHospitalButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addHospitalButton.setText("Add");
        addHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHospitalButtonActionPerformed(evt);
            }
        });

        modifyHospitalButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modifyHospitalButton.setText("Modify");
        modifyHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyHospitalButtonActionPerformed(evt);
            }
        });

        deleteHospitalButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteHospitalButton.setText("Delete");
        deleteHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteHospitalButtonActionPerformed(evt);
            }
        });

        hospitalSaveButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hospitalSaveButton.setText("Save");
        hospitalSaveButton.setEnabled(false);
        hospitalSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalSaveButtonActionPerformed(evt);
            }
        });

        hospitalResetButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hospitalResetButton.setText("Reset");
        hospitalResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator6)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel44)
                                .addComponent(jLabel42))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                                .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(hospitalName, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                                .addComponent(hospitalContact)))
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(addHospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(modifyHospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(hospitalSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(30, 30, 30)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(hospitalResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(deleteHospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(jLabel43)
                    .addComponent(hospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(jLabel45)
                    .addComponent(hospitalContact, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel46)
                        .addComponent(jLabel47))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addHospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteHospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(modifyHospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hospitalSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospitalResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 472, 670, -1));

        jScrollPane4.setViewportView(jPanel3);

        hospitalManagementTab.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, -1));

        jTabbedPane1.addTab("Hospital Management", hospitalManagementTab);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteSupplierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSupplierButtonActionPerformed
        int selectedRow = supplierTable.getSelectedRow();
        if (selectedRow != -1) {
            String supplierCode = supplierTable.getValueAt(selectedRow, 0).toString();
            int choice = JOptionPane.showConfirmDialog(
                    this,
                    "Are you sure you want to delete this supplier?\nThis action cannot be undone!",
                    "Confirm Supplier Deletion",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE
            );

            if (choice == JOptionPane.YES_OPTION) {
                LinkedHashMap<String, String> msg = this.usrCtrl.getSupplierController().deleteSupplier(supplierCode);
                if (msg.get("success") != null) {
                    JOptionPane.showMessageDialog(this, String.format("Supplier '%s' is deleted!", supplierCode));
                    loadSuppliers();
                } else {
                    JOptionPane.showMessageDialog(this, String.format("Fail to delete Supplier '%s' :(", supplierCode) + msg.get("msg"), "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Supplier deletion canceled.", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row first", "Advice", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_deleteSupplierButtonActionPerformed

    private void modifySupplierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifySupplierButtonActionPerformed
        int selectedRow = supplierTable.getSelectedRow();
        if (selectedRow != -1) {
            supplierName.setText(supplierTable.getValueAt(selectedRow, 1).toString());
            supplierContact.setText(supplierTable.getValueAt(selectedRow, 2).toString());
            supplierAddress.setText(supplierTable.getValueAt(selectedRow, 3).toString());
            supplierSaveButton.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row first", "Advice", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_modifySupplierButtonActionPerformed

    private void supplierSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierSaveButtonActionPerformed
        int selectedRow = supplierTable.getSelectedRow();
        String newSupplierName = supplierName.getText();
        String newSupplierContact = supplierContact.getText();
        String newSupplierAddress = supplierAddress.getText();
        Supplier selectedSupplier = SupplierManagement.getSupplierByCode(supplierTable.getValueAt(selectedRow, 0).toString());
        if (!selectedSupplier.getName().equals(newSupplierName)) {
            LinkedHashMap<String, String> msg = this.usrCtrl.getSupplierController().modifySupplierName(newSupplierName, selectedSupplier.getCode());
            if (msg.get("success") != null) {
                JOptionPane.showMessageDialog(this, String.format("Supplier '%s' name is updated!", selectedSupplier.getCode()));
                supplierTable.setValueAt(newSupplierName, selectedRow, 1);
            } else {
                JOptionPane.showMessageDialog(this, String.format("Fail to update supplier '%s' name :(\n", selectedSupplier.getCode()) + msg.get("msg"), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        if (!selectedSupplier.getContact().equals(newSupplierContact)) {
            LinkedHashMap<String, String> msg = this.usrCtrl.getSupplierController().modifySupplierContact(newSupplierContact, selectedSupplier.getCode());
            if (msg.get("success") != null) {
                JOptionPane.showMessageDialog(this, String.format("Supplier '%s' contact is updated!", selectedSupplier.getCode()));
                supplierTable.setValueAt(newSupplierContact, selectedRow, 2);
            } else {
                JOptionPane.showMessageDialog(this, String.format("Fail to update supplier '%s' contact :(\n", selectedSupplier.getCode()) + msg.get("msg"), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        if (!selectedSupplier.getAddress().equals(newSupplierAddress)) {
            LinkedHashMap<String, String> msg = this.usrCtrl.getSupplierController().modifySupplierAddress(newSupplierAddress, selectedSupplier.getCode());
            if (msg.get("success") != null) {
                JOptionPane.showMessageDialog(this, String.format("Supplier '%s' address is updated!", selectedSupplier.getCode()));
                supplierTable.setValueAt(newSupplierAddress, selectedRow, 3);
            } else {
                JOptionPane.showMessageDialog(this, String.format("Fail to update supplier '%s' address :(\n", selectedSupplier.getCode()) + msg.get("msg"), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_supplierSaveButtonActionPerformed

    private void supplierResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierResetButtonActionPerformed
        supplierName.setText("");
        supplierContact.setText("");
        supplierAddress.setText("");
        supplierSaveButton.setEnabled(false);
    }//GEN-LAST:event_supplierResetButtonActionPerformed

    private void modifyHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyHospitalButtonActionPerformed
        int selectedRow = hospitalTable.getSelectedRow();
        if (selectedRow != -1) {
            hospitalName.setText(hospitalTable.getValueAt(selectedRow, 1).toString());
            hospitalContact.setText(hospitalTable.getValueAt(selectedRow, 2).toString());
            hospitalAddress.setText(hospitalTable.getValueAt(selectedRow, 3).toString());
            hospitalSaveButton.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row first", "Advice", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_modifyHospitalButtonActionPerformed

    private void deleteHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteHospitalButtonActionPerformed
        int selectedRow = hospitalTable.getSelectedRow();
        if (selectedRow != -1) {
            String hospitalCode = hospitalTable.getValueAt(selectedRow, 0).toString();
            int choice = JOptionPane.showConfirmDialog(
                    this,
                    "Are you sure you want to delete this hospital?\nThis action cannot be undone!",
                    "Confirm Hospital Deletion",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE
            );

            if (choice == JOptionPane.YES_OPTION) {
                LinkedHashMap<String, String> msg = this.usrCtrl.getHospitalController().deleteHospital(hospitalCode);
                if (msg.get("success") != null) {
                    JOptionPane.showMessageDialog(this, String.format("Hospital '%s' is deleted!", hospitalCode));
                    loadHospitals();
                } else {
                    JOptionPane.showMessageDialog(this, String.format("Fail to delete hospital '%s' :(", hospitalCode) + msg.get("msg"), "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Hospital deletion canceled.", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row first", "Advice", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_deleteHospitalButtonActionPerformed

    private void hospitalSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalSaveButtonActionPerformed
        int selectedRow = hospitalTable.getSelectedRow();
        String newHospitalName = hospitalName.getText();
        String newHospitalContact = hospitalContact.getText();
        String newHospitalAddress = hospitalAddress.getText();
        Hospital selectedHospital = HospitalManagement.getHospitalByCode(hospitalTable.getValueAt(selectedRow, 0).toString());
        if (!selectedHospital.getName().equals(newHospitalName)) {
            LinkedHashMap<String, String> msg = this.usrCtrl.getHospitalController().modifyHospitalName(newHospitalName, selectedHospital.getCode());
            if (msg.get("success") != null) {
                JOptionPane.showMessageDialog(this, String.format("Hospital '%s' name is updated!", selectedHospital.getCode()));
                hospitalTable.setValueAt(newHospitalName, selectedRow, 1);
            } else {
                JOptionPane.showMessageDialog(this, String.format("Fail to update hospital '%s' name :(\n", selectedHospital.getCode()) + msg.get("msg"), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        if (!selectedHospital.getContact().equals(newHospitalContact)) {
            LinkedHashMap<String, String> msg = this.usrCtrl.getHospitalController().modifyHospitalContact(newHospitalContact, selectedHospital.getCode());
            if (msg.get("success") != null) {
                JOptionPane.showMessageDialog(this, String.format("Hospital '%s' contact is updated!", selectedHospital.getCode()));
                hospitalTable.setValueAt(newHospitalContact, selectedRow, 2);
            } else {
                JOptionPane.showMessageDialog(this, String.format("Fail to update hospital '%s' contact :(\n", selectedHospital.getCode()) + msg.get("msg"), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        if (!selectedHospital.getAddress().equals(newHospitalAddress)) {
            LinkedHashMap<String, String> msg = this.usrCtrl.getHospitalController().modifyHospitalAddress(newHospitalAddress, selectedHospital.getCode());
            if (msg.get("success") != null) {
                JOptionPane.showMessageDialog(this, String.format("Hospital '%s' address is updated!", selectedHospital.getCode()));
                hospitalTable.setValueAt(newHospitalAddress, selectedRow, 3);
            } else {
                JOptionPane.showMessageDialog(this, String.format("Fail to update hospital '%s' address :(\n", selectedHospital.getCode()) + msg.get("msg"), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_hospitalSaveButtonActionPerformed

    private void hospitalResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalResetButtonActionPerformed
        hospitalName.setText("");
        hospitalContact.setText("");
        hospitalAddress.setText("");
        hospitalSaveButton.setEnabled(false);
    }//GEN-LAST:event_hospitalResetButtonActionPerformed

    private void supplierSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierSearchButtonActionPerformed
        String keyword = supplierSearchBar.getText();
        List<Supplier> searchResults = this.usrCtrl.getSupplierController().searchSupplier(keyword);
        DefaultTableModel model = (DefaultTableModel) supplierTable.getModel();
        model.setRowCount(0);
        for (Supplier supplier : searchResults) {
            String[] supplierData = {supplier.getCode(), WordProcessing.capitalizeEachWord(supplier.getName()), supplier.getContact(), supplier.getAddress()};
            model.addRow(supplierData);
        }
    }//GEN-LAST:event_supplierSearchButtonActionPerformed

    private void supplierSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierSortButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) supplierTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        supplierTable.setRowSorter(sorter);
        sorter.setSortKeys(Arrays.asList(new RowSorter.SortKey(0, SortOrder.ASCENDING)));
    }//GEN-LAST:event_supplierSortButtonActionPerformed

    private void addSupplierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSupplierButtonActionPerformed
        if (!supplierName.getText().trim().equals("") && !supplierContact.getText().trim().equals("") && !supplierAddress.getText().trim().equals("")) {
            LinkedHashMap<String, String> msg = this.usrCtrl.getSupplierController().addSupplier(supplierName.getText(), supplierContact.getText(), supplierAddress.getText());
            if (msg.get("success") != null) {
                Supplier newSupplier = SupplierManagement.getSupplierByCode(msg.get("newSupplierCode"));
                JOptionPane.showMessageDialog(this, String.format("New Supplier ('%s', '%s') is added!", newSupplier.getCode(), newSupplier.getName()));
                loadSuppliers();
            } else {
                JOptionPane.showMessageDialog(this, String.format("Fail to add new Supplier '%s' :(\n", supplierName.getText().trim()) + msg.get("msg"), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill in all the required supplier details", "Advice", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addSupplierButtonActionPerformed

    private void hospitalSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalSearchButtonActionPerformed
        String keyword = hospitalSearchBar.getText();
        List<Hospital> searchResults = this.usrCtrl.getHospitalController().searchHospital(keyword);
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        model.setRowCount(0);
        for (Hospital hospital : searchResults) {
            String[] hospitalData = {hospital.getCode(), WordProcessing.capitalizeEachWord(hospital.getName()), hospital.getContact(), hospital.getAddress()};
            model.addRow(hospitalData);
        }
    }//GEN-LAST:event_hospitalSearchButtonActionPerformed

    private void hospitalSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalSortButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        hospitalTable.setRowSorter(sorter);
        sorter.setSortKeys(Arrays.asList(new RowSorter.SortKey(0, SortOrder.ASCENDING)));
    }//GEN-LAST:event_hospitalSortButtonActionPerformed

    private void addHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHospitalButtonActionPerformed
        if (!hospitalName.getText().trim().equals("") && !hospitalContact.getText().trim().equals("") && !hospitalAddress.getText().trim().equals("")) {
            LinkedHashMap<String, String> msg = this.usrCtrl.getHospitalController().addHospital(hospitalName.getText(), hospitalContact.getText(), hospitalAddress.getText());
            if (msg.get("success") != null) {
                Hospital newHospital = HospitalManagement.getHospitalByCode(msg.get("newHospitalCode"));
                JOptionPane.showMessageDialog(this, String.format("New Hospital ('%s', '%s') is added!", newHospital.getCode(), newHospital.getName()));
                loadHospitals();
            } else {
                JOptionPane.showMessageDialog(this, String.format("Fail to add new Hospital '%s' :(\n", hospitalName.getText().trim()) + msg.get("msg"), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill in all the required hospital details", "Advice", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addHospitalButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addHospitalButton;
    private javax.swing.JButton addSupplierButton;
    private javax.swing.JButton deleteHospitalButton;
    private javax.swing.JButton deleteSupplierButton;
    private javax.swing.JTextArea hospitalAddress;
    private javax.swing.JTextField hospitalContact;
    private javax.swing.JPanel hospitalManagementTab;
    private javax.swing.JTextField hospitalName;
    private javax.swing.JButton hospitalResetButton;
    private javax.swing.JButton hospitalSaveButton;
    private javax.swing.JTextField hospitalSearchBar;
    private javax.swing.JButton hospitalSearchButton;
    private javax.swing.JButton hospitalSortButton;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton modifyHospitalButton;
    private javax.swing.JButton modifySupplierButton;
    private javax.swing.JTextArea supplierAddress;
    private javax.swing.JTextField supplierContact;
    private javax.swing.JPanel supplierManagementTab;
    private javax.swing.JTextField supplierName;
    private javax.swing.JButton supplierResetButton;
    private javax.swing.JButton supplierSaveButton;
    private javax.swing.JTextField supplierSearchBar;
    private javax.swing.JButton supplierSearchButton;
    private javax.swing.JButton supplierSortButton;
    private javax.swing.JTable supplierTable;
    // End of variables declaration//GEN-END:variables
}
