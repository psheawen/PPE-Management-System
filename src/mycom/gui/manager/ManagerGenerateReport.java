/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mycom.gui.manager;

import com.toedter.calendar.JDateChooser;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import mycom.gui.Admin.*;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import mycom.controllers.UserController;
import mycom.models.PPEItem;
import mycom.services.PPEManagement;
import mycom.services.UserManagement;
import mycom.utils.DateTime;
import mycom.utils.ReportPDFExporter;
import mycom.utils.WordProcessing;

/**
 *
 * @author sheaw
 */
public class ManagerGenerateReport extends javax.swing.JInternalFrame {
    UserController usrCtrl;

    /**
     * Creates new form AdminUserManagement
     */
    public ManagerGenerateReport(UserController usrCtrl) {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null); // set the top frame thingy null
        
        this.usrCtrl = usrCtrl;
        if (this.usrCtrl.getActiveUser().type.equalsIgnoreCase("super admin")) {
            this.usrCtrl.updateActiveUser(UserManagement.getSuperAdmin());
        } else {
            this.usrCtrl.updateActiveUser(UserManagement.getUserById(this.usrCtrl.getActiveUser().getId()));
        }
        
        generateReportPanel.removeAll();
        generateReportPanel.add(selectReportPanel);
        generateReportPanel.repaint();
        generateReportPanel.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        transactionTable1 = new javax.swing.JTable();
        reportTypes = new javax.swing.ButtonGroup();
        generateReportPanel = new javax.swing.JPanel();
        selectReportPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        ppeReportButton = new javax.swing.JRadioButton();
        lowStockReport = new javax.swing.JRadioButton();
        ppeReceiveReport = new javax.swing.JRadioButton();
        ppeDispatchedReport = new javax.swing.JRadioButton();
        ppeInventoryReports = new javax.swing.JScrollPane();
        JPanel3 = new javax.swing.JPanel();
        itemTitle1 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        itemName3 = new javax.swing.JLabel();
        itemDetails1 = new javax.swing.JPanel();
        itemCode1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ppeReportGeneratedBy = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        ppeReportDate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        itemName4 = new javax.swing.JLabel();
        backButton5 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        exportPpeReportButton = new javax.swing.JButton();
        lowStockReports = new javax.swing.JScrollPane();
        JPanel2 = new javax.swing.JPanel();
        itemTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        itemName1 = new javax.swing.JLabel();
        itemDetails = new javax.swing.JPanel();
        itemCode = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lowStockReportGeneratedBy = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        lowStockReportDate = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        itemName2 = new javax.swing.JLabel();
        backButton4 = new javax.swing.JButton();
        exportLowStockReportButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        lowStockTable = new javax.swing.JTable();
        ppeReceivedReports = new javax.swing.JScrollPane();
        JPanel4 = new javax.swing.JPanel();
        itemTitle2 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        itemName5 = new javax.swing.JLabel();
        itemDetails2 = new javax.swing.JPanel();
        itemCode2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        ppeReceivedReportGeneratedBy = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        ppeReceivedReportStartDate = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        ppeReceivedReportEndDate = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        itemName6 = new javax.swing.JLabel();
        backButton6 = new javax.swing.JButton();
        exportPpeReceivedReportButton = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        totalStockReceivedTable = new javax.swing.JTable();
        jSeparator13 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();
        itemName7 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        itemReceivedTable = new javax.swing.JTable();
        ppeDispatchedReports = new javax.swing.JScrollPane();
        JPanel5 = new javax.swing.JPanel();
        itemTitle3 = new javax.swing.JLabel();
        jSeparator15 = new javax.swing.JSeparator();
        jSeparator16 = new javax.swing.JSeparator();
        itemName8 = new javax.swing.JLabel();
        itemDetails3 = new javax.swing.JPanel();
        itemCode3 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        ppeDispatchedReportGeneratedBy = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        ppeDispatchedReportStartDate = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        ppeDispatchedReportEndDate = new javax.swing.JTextField();
        jSeparator17 = new javax.swing.JSeparator();
        jSeparator18 = new javax.swing.JSeparator();
        itemName9 = new javax.swing.JLabel();
        backButton7 = new javax.swing.JButton();
        exportPpeDispatchedReportButton = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        totalStockDistributedTable = new javax.swing.JTable();
        jSeparator19 = new javax.swing.JSeparator();
        jSeparator20 = new javax.swing.JSeparator();
        itemName10 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        itemDispatchedTable = new javax.swing.JTable();

        transactionTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        transactionTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TRANSACTION TYPE", "QUANTITY", "DATE", "ENTITY INVOLVED"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transactionTable1.setRowHeight(30);
        jScrollPane4.setViewportView(transactionTable1);

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(770, 642));

        generateReportPanel.setBackground(new java.awt.Color(255, 255, 255));
        generateReportPanel.setAutoscrolls(true);
        generateReportPanel.setPreferredSize(new java.awt.Dimension(770, 642));
        generateReportPanel.setLayout(new java.awt.CardLayout());

        selectReportPanel.setBackground(new java.awt.Color(255, 255, 255));
        selectReportPanel.setAutoscrolls(true);
        selectReportPanel.setPreferredSize(new java.awt.Dimension(770, 642));
        selectReportPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Generate Report");
        selectReportPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("There are 4 types of report. \n\n(i) PPE Inventory Report: Lists all PPE items and available quantities, sorted by item code.\n(ii) Low Stock Report: Shows PPE items with stock below 25 boxes\n(iii) PPE Items Received Report: Details PPE items received within a specific date range\n(iv) PPE Items Dispatched Report: Details PPE items dispatched within a specific date range.\n\nPlease select the report to view and generate as needed.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray), javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20)));
        jTextArea1.setFocusable(false);
        jScrollPane1.setViewportView(jTextArea1);

        selectReportPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 670, 190));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Types of Report:");
        selectReportPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, -1));

        ppeReportButton.setBackground(new java.awt.Color(255, 255, 255));
        reportTypes.add(ppeReportButton);
        ppeReportButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeReportButton.setText("PPE Inventory Report");
        ppeReportButton.setIconTextGap(20);
        ppeReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeReportButtonActionPerformed(evt);
            }
        });
        selectReportPanel.add(ppeReportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, -1, -1));

        lowStockReport.setBackground(new java.awt.Color(255, 255, 255));
        reportTypes.add(lowStockReport);
        lowStockReport.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lowStockReport.setText("Low Stock Report");
        lowStockReport.setIconTextGap(20);
        lowStockReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowStockReportActionPerformed(evt);
            }
        });
        selectReportPanel.add(lowStockReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, -1, -1));

        ppeReceiveReport.setBackground(new java.awt.Color(255, 255, 255));
        reportTypes.add(ppeReceiveReport);
        ppeReceiveReport.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeReceiveReport.setText("PPE Items Received Report");
        ppeReceiveReport.setIconTextGap(20);
        ppeReceiveReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeReceiveReportActionPerformed(evt);
            }
        });
        selectReportPanel.add(ppeReceiveReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, -1, -1));

        ppeDispatchedReport.setBackground(new java.awt.Color(255, 255, 255));
        reportTypes.add(ppeDispatchedReport);
        ppeDispatchedReport.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeDispatchedReport.setText("PPE Items Dispatched Report");
        ppeDispatchedReport.setIconTextGap(20);
        ppeDispatchedReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeDispatchedReportActionPerformed(evt);
            }
        });
        selectReportPanel.add(ppeDispatchedReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 490, -1, -1));

        generateReportPanel.add(selectReportPanel, "card3");

        ppeInventoryReports.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ppeInventoryReports.setPreferredSize(new java.awt.Dimension(772, 642));

        JPanel3.setBackground(new java.awt.Color(255, 255, 255));
        JPanel3.setMinimumSize(new java.awt.Dimension(770, 910));
        JPanel3.setPreferredSize(new java.awt.Dimension(770, 700));
        JPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        itemTitle1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        itemTitle1.setText("Generate Report / PPE Inventory Report");
        JPanel3.add(itemTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        jSeparator5.setForeground(new java.awt.Color(102, 102, 102));
        JPanel3.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 690, 10));

        jSeparator6.setForeground(new java.awt.Color(102, 102, 102));
        JPanel3.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 690, 20));

        itemName3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName3.setText("PPE Inventory Report");
        JPanel3.add(itemName3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, -1));

        itemDetails1.setBackground(new java.awt.Color(255, 255, 255));
        itemDetails1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, new java.awt.Color(204, 204, 204)));

        itemCode1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemCode1.setText("A report of all PPE items with their available quantities, sorted in ascending order by item code. ");
        itemCode1.setBorder(null);
        itemCode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCode1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Generated by");

        ppeReportGeneratedBy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeReportGeneratedBy.setText("Manager");
        ppeReportGeneratedBy.setBorder(null);
        ppeReportGeneratedBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeReportGeneratedByActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Date");

        ppeReportDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeReportDate.setText("YYYY-MM-DD");
        ppeReportDate.setBorder(null);
        ppeReportDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeReportDateActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText(":");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText(":");

        javax.swing.GroupLayout itemDetails1Layout = new javax.swing.GroupLayout(itemDetails1);
        itemDetails1.setLayout(itemDetails1Layout);
        itemDetails1Layout.setHorizontalGroup(
            itemDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetails1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemCode1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(itemDetails1Layout.createSequentialGroup()
                        .addGroup(itemDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel7))
                        .addGap(50, 50, 50)
                        .addGroup(itemDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(itemDetails1Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ppeReportDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(itemDetails1Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ppeReportGeneratedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        itemDetails1Layout.setVerticalGroup(
            itemDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetails1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemCode1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(itemDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ppeReportGeneratedBy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(itemDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14)
                    .addComponent(ppeReportDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        JPanel3.add(itemDetails1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 690, 110));

        jSeparator7.setForeground(new java.awt.Color(102, 102, 102));
        JPanel3.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 690, 10));

        jSeparator8.setForeground(new java.awt.Color(102, 102, 102));
        JPanel3.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 690, -1));

        itemName4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName4.setText("Inventory Details");
        JPanel3.add(itemName4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 680, 40));

        backButton5.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        backButton5.setText("↑");
        backButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton5ActionPerformed(evt);
            }
        });
        JPanel3.add(backButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 59, -1));

        itemTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEM CODE", "ITEM NAME", "AVAILABLE STOCK"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable.setAutoscrolls(false);
        itemTable.setEnabled(false);
        itemTable.setFocusable(false);
        itemTable.setIntercellSpacing(new java.awt.Dimension(20, 5));
        itemTable.setRequestFocusEnabled(false);
        itemTable.setRowHeight(40);
        itemTable.setRowSelectionAllowed(false);
        jScrollPane6.setViewportView(itemTable);

        JPanel3.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 397, 690, 200));

        exportPpeReportButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        exportPpeReportButton.setText("Export PDF");
        exportPpeReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportPpeReportButtonActionPerformed(evt);
            }
        });
        JPanel3.add(exportPpeReportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 630, 110, 30));

        ppeInventoryReports.setViewportView(JPanel3);

        generateReportPanel.add(ppeInventoryReports, "card4");

        lowStockReports.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        lowStockReports.setPreferredSize(new java.awt.Dimension(770, 642));

        JPanel2.setBackground(new java.awt.Color(255, 255, 255));
        JPanel2.setMinimumSize(new java.awt.Dimension(770, 710));
        JPanel2.setPreferredSize(new java.awt.Dimension(770, 710));
        JPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        itemTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        itemTitle.setText("Generate Report / PPE Low Stock Report");
        JPanel2.add(itemTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        jSeparator1.setForeground(new java.awt.Color(102, 102, 102));
        JPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 690, 10));

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        JPanel2.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 690, 20));

        itemName1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName1.setText("PPE Inventory Low Stock Report");
        JPanel2.add(itemName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 120, 690, -1));

        itemDetails.setBackground(new java.awt.Color(255, 255, 255));
        itemDetails.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, new java.awt.Color(204, 204, 204)));

        itemCode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemCode.setText("A report of PPE items with stock quantities below the threshold of 25 boxes. ");
        itemCode.setBorder(null);
        itemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCodeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Generated by");

        lowStockReportGeneratedBy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lowStockReportGeneratedBy.setText("Manager");
        lowStockReportGeneratedBy.setBorder(null);
        lowStockReportGeneratedBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowStockReportGeneratedByActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Date");

        lowStockReportDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lowStockReportDate.setText("YYYY-MM-DD");
        lowStockReportDate.setBorder(null);
        lowStockReportDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowStockReportDateActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText(":");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText(":");

        javax.swing.GroupLayout itemDetailsLayout = new javax.swing.GroupLayout(itemDetails);
        itemDetails.setLayout(itemDetailsLayout);
        itemDetailsLayout.setHorizontalGroup(
            itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(itemDetailsLayout.createSequentialGroup()
                        .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addGap(50, 50, 50)
                        .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(itemDetailsLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lowStockReportDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(itemDetailsLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lowStockReportGeneratedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(209, Short.MAX_VALUE))
        );
        itemDetailsLayout.setVerticalGroup(
            itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lowStockReportGeneratedBy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(lowStockReportDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        JPanel2.add(itemDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 690, 110));

        jSeparator2.setForeground(new java.awt.Color(102, 102, 102));
        JPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 690, 10));

        jSeparator4.setForeground(new java.awt.Color(102, 102, 102));
        JPanel2.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 690, -1));

        itemName2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName2.setText("Low Stock Records");
        JPanel2.add(itemName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 680, 40));

        backButton4.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        backButton4.setText("↑");
        backButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton4ActionPerformed(evt);
            }
        });
        JPanel2.add(backButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 59, -1));

        exportLowStockReportButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        exportLowStockReportButton.setText("Export PDF");
        exportLowStockReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportLowStockReportButtonActionPerformed(evt);
            }
        });
        JPanel2.add(exportLowStockReportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 630, 110, 30));

        lowStockTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lowStockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEM CODE", "ITEM NAME", "AVAILABLE STOCK", "STATUS", "STAFF INVOLVED"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lowStockTable.setAutoscrolls(false);
        lowStockTable.setEnabled(false);
        lowStockTable.setFocusable(false);
        lowStockTable.setIntercellSpacing(new java.awt.Dimension(20, 5));
        lowStockTable.setRequestFocusEnabled(false);
        lowStockTable.setRowHeight(30);
        lowStockTable.setRowSelectionAllowed(false);
        jScrollPane7.setViewportView(lowStockTable);

        JPanel2.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 690, 200));

        lowStockReports.setViewportView(JPanel2);

        generateReportPanel.add(lowStockReports, "card4");

        ppeReceivedReports.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        JPanel4.setBackground(new java.awt.Color(255, 255, 255));
        JPanel4.setMinimumSize(new java.awt.Dimension(770, 1056));
        JPanel4.setPreferredSize(new java.awt.Dimension(770, 1056));
        JPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        itemTitle2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        itemTitle2.setText("Generate Report / PPE Items Received Report");
        JPanel4.add(itemTitle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        jSeparator9.setForeground(new java.awt.Color(102, 102, 102));
        JPanel4.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 690, 10));

        jSeparator10.setForeground(new java.awt.Color(102, 102, 102));
        JPanel4.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 690, 20));

        itemName5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName5.setText("PPE Items Received Report");
        JPanel4.add(itemName5, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 120, 690, -1));

        itemDetails2.setBackground(new java.awt.Color(255, 255, 255));
        itemDetails2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, new java.awt.Color(204, 204, 204)));

        itemCode2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemCode2.setText("A report of PPE items received during the specified period. ");
        itemCode2.setBorder(null);
        itemCode2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCode2ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Generated by");

        ppeReceivedReportGeneratedBy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeReceivedReportGeneratedBy.setText("Manager");
        ppeReceivedReportGeneratedBy.setBorder(null);
        ppeReceivedReportGeneratedBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeReceivedReportGeneratedByActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Start Date");

        ppeReceivedReportStartDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeReceivedReportStartDate.setText("YYYY-MM-DD");
        ppeReceivedReportStartDate.setBorder(null);
        ppeReceivedReportStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeReceivedReportStartDateActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText(":");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText(":");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("End Date");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText(":");

        ppeReceivedReportEndDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeReceivedReportEndDate.setText("YYYY-MM-DD");
        ppeReceivedReportEndDate.setBorder(null);
        ppeReceivedReportEndDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeReceivedReportEndDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout itemDetails2Layout = new javax.swing.GroupLayout(itemDetails2);
        itemDetails2.setLayout(itemDetails2Layout);
        itemDetails2Layout.setHorizontalGroup(
            itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetails2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemCode2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(itemDetails2Layout.createSequentialGroup()
                        .addGroup(itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addGap(50, 50, 50)
                        .addGroup(itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(itemDetails2Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ppeReceivedReportGeneratedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(itemDetails2Layout.createSequentialGroup()
                                .addGroup(itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ppeReceivedReportEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ppeReceivedReportStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel19))
                .addContainerGap(319, Short.MAX_VALUE))
        );
        itemDetails2Layout.setVerticalGroup(
            itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetails2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemCode2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ppeReceivedReportGeneratedBy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel18)
                    .addComponent(ppeReceivedReportStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(ppeReceivedReportEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        JPanel4.add(itemDetails2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 690, 130));

        jSeparator11.setForeground(new java.awt.Color(102, 102, 102));
        JPanel4.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 690, 10));

        jSeparator12.setForeground(new java.awt.Color(102, 102, 102));
        JPanel4.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 690, -1));

        itemName6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName6.setText("Total PPE Items Received");
        JPanel4.add(itemName6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 680, 40));

        backButton6.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        backButton6.setText("↑");
        backButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton6ActionPerformed(evt);
            }
        });
        JPanel4.add(backButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 59, -1));

        exportPpeReceivedReportButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        exportPpeReceivedReportButton.setText("Export PDF");
        exportPpeReceivedReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportPpeReceivedReportButtonActionPerformed(evt);
            }
        });
        JPanel4.add(exportPpeReceivedReportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 960, 110, 30));

        totalStockReceivedTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalStockReceivedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEM CODE", "ITEM NAME", "SUPPLIER CODE", "TOTAL STOCK RECEIVED"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        totalStockReceivedTable.setAutoscrolls(false);
        totalStockReceivedTable.setEnabled(false);
        totalStockReceivedTable.setFocusable(false);
        totalStockReceivedTable.setIntercellSpacing(new java.awt.Dimension(20, 5));
        totalStockReceivedTable.setRequestFocusEnabled(false);
        totalStockReceivedTable.setRowHeight(40);
        totalStockReceivedTable.setRowSelectionAllowed(false);
        jScrollPane9.setViewportView(totalStockReceivedTable);

        JPanel4.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 690, 200));

        jSeparator13.setForeground(new java.awt.Color(102, 102, 102));
        JPanel4.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 690, 10));

        jSeparator14.setForeground(new java.awt.Color(102, 102, 102));
        JPanel4.add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 700, 690, -1));

        itemName7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName7.setText("PPE Items Received Transactions");
        JPanel4.add(itemName7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 680, 40));

        itemReceivedTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemReceivedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DATE", "ITEM CODE", "ITEM NAME", "QUANTITY", "SUPPLIER CODE", "SUPPLIER NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemReceivedTable.setAutoscrolls(false);
        itemReceivedTable.setEnabled(false);
        itemReceivedTable.setFocusable(false);
        itemReceivedTable.setIntercellSpacing(new java.awt.Dimension(20, 5));
        itemReceivedTable.setRequestFocusEnabled(false);
        itemReceivedTable.setRowHeight(40);
        itemReceivedTable.setRowSelectionAllowed(false);
        jScrollPane11.setViewportView(itemReceivedTable);

        JPanel4.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 730, 690, 200));

        ppeReceivedReports.setViewportView(JPanel4);

        generateReportPanel.add(ppeReceivedReports, "card4");

        ppeDispatchedReports.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        JPanel5.setBackground(new java.awt.Color(255, 255, 255));
        JPanel5.setMinimumSize(new java.awt.Dimension(770, 1056));
        JPanel5.setPreferredSize(new java.awt.Dimension(770, 1056));
        JPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        itemTitle3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        itemTitle3.setText("Generate Report / PPE Items Dispatched Report");
        JPanel5.add(itemTitle3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        jSeparator15.setForeground(new java.awt.Color(102, 102, 102));
        JPanel5.add(jSeparator15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 690, 10));

        jSeparator16.setForeground(new java.awt.Color(102, 102, 102));
        JPanel5.add(jSeparator16, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 690, 20));

        itemName8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName8.setText("PPE Items Dispatched Report");
        JPanel5.add(itemName8, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 120, 690, -1));

        itemDetails3.setBackground(new java.awt.Color(255, 255, 255));
        itemDetails3.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, new java.awt.Color(204, 204, 204)));

        itemCode3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemCode3.setText("A report of PPE items received during the specified period. ");
        itemCode3.setBorder(null);
        itemCode3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCode3ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Generated by");

        ppeDispatchedReportGeneratedBy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeDispatchedReportGeneratedBy.setText("Manager");
        ppeDispatchedReportGeneratedBy.setBorder(null);
        ppeDispatchedReportGeneratedBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeDispatchedReportGeneratedByActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Start Date");

        ppeDispatchedReportStartDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeDispatchedReportStartDate.setText("YYYY-MM-DD");
        ppeDispatchedReportStartDate.setBorder(null);
        ppeDispatchedReportStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeDispatchedReportStartDateActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText(":");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText(":");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("End Date");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText(":");

        ppeDispatchedReportEndDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ppeDispatchedReportEndDate.setText("YYYY-MM-DD");
        ppeDispatchedReportEndDate.setBorder(null);
        ppeDispatchedReportEndDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeDispatchedReportEndDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout itemDetails3Layout = new javax.swing.GroupLayout(itemDetails3);
        itemDetails3.setLayout(itemDetails3Layout);
        itemDetails3Layout.setHorizontalGroup(
            itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetails3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemCode3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(itemDetails3Layout.createSequentialGroup()
                        .addGroup(itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21))
                        .addGap(50, 50, 50)
                        .addGroup(itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(itemDetails3Layout.createSequentialGroup()
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ppeDispatchedReportGeneratedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(itemDetails3Layout.createSequentialGroup()
                                .addGroup(itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ppeDispatchedReportEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ppeDispatchedReportStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel25))
                .addContainerGap(319, Short.MAX_VALUE))
        );
        itemDetails3Layout.setVerticalGroup(
            itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetails3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemCode3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ppeDispatchedReportGeneratedBy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(jLabel23)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel24)
                    .addComponent(ppeDispatchedReportStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(ppeDispatchedReportEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        JPanel5.add(itemDetails3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 690, 130));

        jSeparator17.setForeground(new java.awt.Color(102, 102, 102));
        JPanel5.add(jSeparator17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 690, 10));

        jSeparator18.setForeground(new java.awt.Color(102, 102, 102));
        JPanel5.add(jSeparator18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 690, -1));

        itemName9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName9.setText("Total PPE Items Dispatched");
        JPanel5.add(itemName9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 680, 40));

        backButton7.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        backButton7.setText("↑");
        backButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton7ActionPerformed(evt);
            }
        });
        JPanel5.add(backButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 59, -1));

        exportPpeDispatchedReportButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        exportPpeDispatchedReportButton.setText("Export PDF");
        exportPpeDispatchedReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportPpeDispatchedReportButtonActionPerformed(evt);
            }
        });
        JPanel5.add(exportPpeDispatchedReportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 960, 110, 30));

        totalStockDistributedTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalStockDistributedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEM CODE", "ITEM NAME", "HOSPITAL CODE", "TOTAL STOCK DISPATCHED"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        totalStockDistributedTable.setAutoscrolls(false);
        totalStockDistributedTable.setEnabled(false);
        totalStockDistributedTable.setFocusable(false);
        totalStockDistributedTable.setIntercellSpacing(new java.awt.Dimension(20, 5));
        totalStockDistributedTable.setRequestFocusEnabled(false);
        totalStockDistributedTable.setRowHeight(40);
        totalStockDistributedTable.setRowSelectionAllowed(false);
        jScrollPane10.setViewportView(totalStockDistributedTable);

        JPanel5.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 690, 200));

        jSeparator19.setForeground(new java.awt.Color(102, 102, 102));
        JPanel5.add(jSeparator19, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 690, 10));

        jSeparator20.setForeground(new java.awt.Color(102, 102, 102));
        JPanel5.add(jSeparator20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 700, 690, -1));

        itemName10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName10.setText("PPE Items Dispatched Transactions");
        JPanel5.add(itemName10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 680, 40));

        itemDispatchedTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemDispatchedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DATE", "ITEM CODE", "ITEM NAME", "QUANTITY", "HOSPITAL CODE", "HOSPITAL NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemDispatchedTable.setAutoscrolls(false);
        itemDispatchedTable.setEnabled(false);
        itemDispatchedTable.setFocusable(false);
        itemDispatchedTable.setIntercellSpacing(new java.awt.Dimension(20, 5));
        itemDispatchedTable.setRequestFocusEnabled(false);
        itemDispatchedTable.setRowHeight(40);
        itemDispatchedTable.setRowSelectionAllowed(false);
        jScrollPane12.setViewportView(itemDispatchedTable);

        JPanel5.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 730, 690, 200));

        ppeDispatchedReports.setViewportView(JPanel5);

        generateReportPanel.add(ppeDispatchedReports, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(generateReportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(generateReportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton4ActionPerformed
        generateReportPanel.removeAll();
        generateReportPanel.add(selectReportPanel);
        generateReportPanel.repaint();
        generateReportPanel.revalidate();
    }//GEN-LAST:event_backButton4ActionPerformed

    private void ppeReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeReportButtonActionPerformed
        generateReportPanel.removeAll();
        generateReportPanel.add(ppeInventoryReports);
        generateReportPanel.repaint();
        generateReportPanel.revalidate();
        showPPEInventoryReport();
    }//GEN-LAST:event_ppeReportButtonActionPerformed

    private void lowStockReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowStockReportActionPerformed
        generateReportPanel.removeAll();
        generateReportPanel.add(lowStockReports);
        generateReportPanel.repaint();
        generateReportPanel.revalidate();
        showLowStockReport();
    }//GEN-LAST:event_lowStockReportActionPerformed

    private void ppeReceiveReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeReceiveReportActionPerformed
        LinkedHashMap<String, String> dateRange = selectDateRange();
        if (dateRange.get("startDate") != null && dateRange.get("endDate") != null) {
            generateReportPanel.removeAll();
            generateReportPanel.add(ppeReceivedReports);
            generateReportPanel.repaint();
            generateReportPanel.revalidate();
            showPPEReceivedReport(dateRange.get("startDate"), dateRange.get("endDate"));
        }
    }//GEN-LAST:event_ppeReceiveReportActionPerformed

    private void ppeDispatchedReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeDispatchedReportActionPerformed
        LinkedHashMap<String, String> dateRange = selectDateRange();
        if (dateRange.get("startDate") != null && dateRange.get("endDate") != null) {
            generateReportPanel.removeAll();
            generateReportPanel.add(ppeDispatchedReports);
            generateReportPanel.repaint();
            generateReportPanel.revalidate();
            showPPEDispatchedReport(dateRange.get("startDate"), dateRange.get("endDate"));
        }
    }//GEN-LAST:event_ppeDispatchedReportActionPerformed

    private void itemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCodeActionPerformed

    private void lowStockReportGeneratedByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowStockReportGeneratedByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lowStockReportGeneratedByActionPerformed

    private void lowStockReportDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowStockReportDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lowStockReportDateActionPerformed

    private void exportLowStockReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportLowStockReportButtonActionPerformed
        String folderPath = selectFolderDir();
        if (folderPath != null) {
            String fileName = JOptionPane.showInputDialog(this, "Enter PDF Name: ", "Report PDF Name", JOptionPane.QUESTION_MESSAGE);
            String filePath = ReportPDFExporter.filePath(fileName, folderPath);
            String manager = this.usrCtrl.getActiveUser().getName();
            String date = lowStockReportDate.getText();
            if (fileName != null && !fileName.equals("")) {
                try {
                    if (ReportPDFExporter.exportLowStockReport(filePath, manager, date, lowStockTable)) {
                        JOptionPane.showMessageDialog(this, "Low stock report has been exported!", "Report Exporting", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Fail to export Low stock report :(", "Report Exporting", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException ioe) {
                    System.out.println(ioe.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Report exporting is cancelled", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No directory selected.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_exportLowStockReportButtonActionPerformed

    private void itemCode1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCode1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCode1ActionPerformed

    private void ppeReportGeneratedByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeReportGeneratedByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppeReportGeneratedByActionPerformed

    private void ppeReportDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeReportDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppeReportDateActionPerformed

    private void backButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton5ActionPerformed
        generateReportPanel.removeAll();
        generateReportPanel.add(selectReportPanel);
        generateReportPanel.repaint();
        generateReportPanel.revalidate();
    }//GEN-LAST:event_backButton5ActionPerformed

    private void exportPpeReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportPpeReportButtonActionPerformed
        String folderPath = selectFolderDir();
        if (folderPath != null) {
            String fileName = JOptionPane.showInputDialog(this, "Enter PDF Name: ", "Report PDF Name", JOptionPane.QUESTION_MESSAGE);
            String filePath = ReportPDFExporter.filePath(fileName, folderPath);
            String manager = this.usrCtrl.getActiveUser().getName();
            String date = ppeReportDate.getText();
            if (fileName != null && !fileName.equals("")) {
                try {
                    if (ReportPDFExporter.exportPPEInventoryReport(filePath, manager, date, itemTable)) {
                        JOptionPane.showMessageDialog(this, "PPE inventory report has been exported!", "Report Exporting", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Fail to export PPE inventory report :(", "Report Exporting", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException ioe) {
                    System.out.println(ioe.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Report exporting is cancelled", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No directory selected.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_exportPpeReportButtonActionPerformed

    private void itemCode2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCode2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCode2ActionPerformed

    private void ppeReceivedReportGeneratedByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeReceivedReportGeneratedByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppeReceivedReportGeneratedByActionPerformed

    private void ppeReceivedReportStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeReceivedReportStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppeReceivedReportStartDateActionPerformed

    private void backButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton6ActionPerformed
        generateReportPanel.removeAll();
        generateReportPanel.add(selectReportPanel);
        generateReportPanel.repaint();
        generateReportPanel.revalidate();
    }//GEN-LAST:event_backButton6ActionPerformed

    private void exportPpeReceivedReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportPpeReceivedReportButtonActionPerformed
        String folderPath = selectFolderDir();
        if (folderPath != null) {
            String fileName = JOptionPane.showInputDialog(this, "Enter PDF Name: ", "Report PDF Name", JOptionPane.QUESTION_MESSAGE);
            String filePath = ReportPDFExporter.filePath(fileName, folderPath);
            String manager = this.usrCtrl.getActiveUser().getName();
            String startDate = ppeReceivedReportStartDate.getText();
            String endDate = ppeReceivedReportEndDate.getText();
            if (fileName != null && !fileName.equals("")) {
                try {
                    if (ReportPDFExporter.exportPPEReceivedReport(filePath, manager, startDate, endDate, totalStockReceivedTable, itemReceivedTable)) {
                        JOptionPane.showMessageDialog(this, "PPE item received report has been exported!", "Report Exporting", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Fail to export PPE item received report :(", "Report Exporting", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException ioe) {
                    System.out.println(ioe.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Report exporting is cancelled", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No directory selected.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_exportPpeReceivedReportButtonActionPerformed

    private void ppeReceivedReportEndDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeReceivedReportEndDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppeReceivedReportEndDateActionPerformed

    private void itemCode3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCode3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCode3ActionPerformed

    private void ppeDispatchedReportGeneratedByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeDispatchedReportGeneratedByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppeDispatchedReportGeneratedByActionPerformed

    private void ppeDispatchedReportStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeDispatchedReportStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppeDispatchedReportStartDateActionPerformed

    private void ppeDispatchedReportEndDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeDispatchedReportEndDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppeDispatchedReportEndDateActionPerformed

    private void backButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton7ActionPerformed
        generateReportPanel.removeAll();
        generateReportPanel.add(selectReportPanel);
        generateReportPanel.repaint();
        generateReportPanel.revalidate();
    }//GEN-LAST:event_backButton7ActionPerformed

    private void exportPpeDispatchedReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportPpeDispatchedReportButtonActionPerformed
        String folderPath = selectFolderDir();
        if (folderPath != null) {
            String fileName = JOptionPane.showInputDialog(this, "Enter PDF Name: ", "Report PDF Name", JOptionPane.QUESTION_MESSAGE);
            System.out.println(fileName);
            if (fileName != null && !fileName.equals("")) {
                String filePath = ReportPDFExporter.filePath(fileName, folderPath);
                String manager = this.usrCtrl.getActiveUser().getName();
                String startDate = ppeDispatchedReportStartDate.getText();
                String endDate = ppeDispatchedReportEndDate.getText();
                try {
                    if (ReportPDFExporter.exportPPEDispatchedReport(filePath, manager, startDate, endDate, totalStockDistributedTable, itemDispatchedTable)) {
                        JOptionPane.showMessageDialog(this, "PPE item dispatched report has been exported!", "Report Exporting", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Fail to export PPE item dispatched report :(", "Report Exporting", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException ioe) {
                    System.out.println(ioe.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Report exporting is cancelled", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No directory selected.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_exportPpeDispatchedReportButtonActionPerformed

     private void showPPEInventoryReport() {
        ppeInventoryReports.setVisible(true);
        ppeInventoryReports.setEnabled(true);
        ppeReportGeneratedBy.setText(this.usrCtrl.getActiveUser().getName());
        LocalDate date = DateTime.getDate(DateTime.currentDateTime());
        ppeReportDate.setText(date.toString());
        
        // Load Item Table
        DefaultTableModel model = (DefaultTableModel) itemTable.getModel();
        model.setRowCount(0);
//        UserManagement usrServices = this.usrCtrl.getUserServices();
        List<PPEItem> allItems = this.usrCtrl.getPPEController().getAllPPEItems();
        if (!allItems.isEmpty()) {
            for (PPEItem item: allItems) {
                String[] itemData = {item.getCode(), WordProcessing.capitalizeEachWord(item.getName()), String.valueOf(item.getQuantity())};
                model.addRow(itemData);
            }
        }
        itemTable = new JTable(model);
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        itemTable.setRowSorter(sorter);
        sorter.setSortKeys(Arrays.asList(new RowSorter.SortKey(0, SortOrder.ASCENDING)));
    }
    
    private void showLowStockReport() {
        lowStockReports.setVisible(true);
        lowStockReports.enable(true);
        lowStockReportGeneratedBy.setText(this.usrCtrl.getActiveUser().getName());
        LocalDate date = DateTime.getDate(DateTime.currentDateTime());
        lowStockReportDate.setText(date.toString());
        
        // Load Item Table
        DefaultTableModel model = (DefaultTableModel) lowStockTable.getModel();
        model.setRowCount(0);
        ArrayList<LinkedHashMap<String, String>> lowStockItems = PPEManagement.getLowStockItems();
        if (!lowStockItems.isEmpty()) {
            for (LinkedHashMap<String, String> item: lowStockItems) {
                PPEItem ppeItem = PPEManagement.getPPEItemByCode(item.get("itemCode"));
                String[] itemData = {ppeItem.getCode(), ppeItem.getName(), String.valueOf(ppeItem.getQuantity()), item.get("resolutionStatus"), item.get("staffInvolved")};
                model.addRow(itemData);
            }
        }
        lowStockTable = new JTable(model);
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        lowStockTable.setRowSorter(sorter);
        sorter.setSortKeys(Arrays.asList(new RowSorter.SortKey(0, SortOrder.ASCENDING)));
    }
    
    private void showPPEReceivedReport(String start, String end) {
        ppeReceivedReports.setVisible(true);
        ppeReceivedReports.enable(true);
        ppeReceivedReportGeneratedBy.setText(this.usrCtrl.getActiveUser().getName());
        ppeReceivedReportStartDate.setText(start);
        ppeReceivedReportEndDate.setText(end);

        try {
            // if empty cancel
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date startDate = sdf.parse(start);
            Date endDate = sdf.parse(end);
            // totalStockReceivedTable
            DefaultTableModel model1 = (DefaultTableModel) totalStockReceivedTable.getModel();
            model1.setRowCount(0);
            List<LinkedHashMap<String, String>> totalReceived = this.usrCtrl.getTransactionController().allTotalStockReceived(startDate, endDate);
            if (!totalReceived.isEmpty()) {
                for (LinkedHashMap<String, String> received: totalReceived) {
                    String[] receivedData = {received.get("itemCode"), received.get("itemName"), received.get("supplierCode"), received.get("totalStockReceived")};
                    model1.addRow(receivedData);
                }
            }
            totalStockReceivedTable = new JTable(model1);

            // Load Item Table
            DefaultTableModel model = (DefaultTableModel) itemReceivedTable.getModel();
            model.setRowCount(0);
            ArrayList<LinkedHashMap<String, String>> receivedTransactions = this.usrCtrl.getPPEController().getPPEReceivedTransactions();
            for (LinkedHashMap<String, String> transaction: receivedTransactions) {
                // check the date
                Date transactionDate = sdf.parse(transaction.get("date"));
                if ((transactionDate.compareTo(startDate) >= 0) && (transactionDate.compareTo(endDate) <= 0)) {
                    System.out.println("wiii");
                    String[] transactionData = {transaction.get("date"), transaction.get("itemCode"), transaction.get("itemName"), transaction.get("receivedQuantity"), transaction.get("supplierCode"), transaction.get("supplierName")};
                    model.addRow(transactionData);
                }
            }
            itemReceivedTable = new JTable(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void showPPEDispatchedReport(String start, String end) {
        ppeDispatchedReports.setVisible(true);
        ppeDispatchedReports.enable(true);
        ppeDispatchedReportGeneratedBy.setText(this.usrCtrl.getActiveUser().getName());
        ppeDispatchedReportStartDate.setText(start);
        ppeDispatchedReportEndDate.setText(end);

        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date startDate = sdf.parse(start);
            Date endDate = sdf.parse(end);

            // totalStockDistributedTable
            DefaultTableModel model1 = (DefaultTableModel) totalStockDistributedTable.getModel();
            model1.setRowCount(0);
            List<LinkedHashMap<String, String>> totalDistributed = this.usrCtrl.getTransactionController().allTotalStockDistributed(startDate, endDate);
            if (!totalDistributed.isEmpty()) {
                for (LinkedHashMap<String, String> distributed: totalDistributed) {
                    String[] distributedData = {distributed.get("itemCode"), distributed.get("itemName"), distributed.get("hospitalCode"), distributed.get("totalStockDistributed")};
                    model1.addRow(distributedData);
                }
            }
            totalStockDistributedTable = new JTable(model1);
            
            // Load Item Table
            DefaultTableModel model = (DefaultTableModel) itemDispatchedTable.getModel();
            model.setRowCount(0);
            ArrayList<LinkedHashMap<String, String>> distributedTransactions = this.usrCtrl.getPPEController().getPPEDispatchedTransactions();
            for (LinkedHashMap<String, String> transaction: distributedTransactions) {
                // check the date
                Date transactionDate = sdf.parse(transaction.get("date"));
                if ((transactionDate.compareTo(startDate) >= 0) && (transactionDate.compareTo(endDate) <= 0)) {
                    String[] transactionData = {transaction.get("date"), transaction.get("itemCode"), transaction.get("itemName"), transaction.get("distributedQuantity"), transaction.get("hospitalCode"), transaction.get("hospitalName")};
                    model.addRow(transactionData);
                }
            }
            itemDispatchedTable = new JTable(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private String selectFolderDir() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select Directory to Save Report");
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);

        int returnValue = fileChooser.showDialog(null, "Select Folder");
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedDirectory = fileChooser.getSelectedFile();
            String folderPath = selectedDirectory.getAbsolutePath();
            return folderPath;
        } else {
            return null;
        }
    }
    
    private LinkedHashMap<String, String> selectDateRange() {
        LinkedHashMap<String, String> dateRange = new LinkedHashMap<>();
        JDateChooser startDateChooser = new JDateChooser();
        JDateChooser endDateChooser = new JDateChooser();
        
        Date currentDate = new Date();
        startDateChooser.setMaxSelectableDate(currentDate);
        endDateChooser.setMaxSelectableDate(currentDate);

        JPanel panel = new JPanel();
        panel.add(new JLabel("Start Date:"));
        panel.add(startDateChooser);
        panel.add(new JLabel("End Date:"));
        panel.add(endDateChooser);

        int result = JOptionPane.showConfirmDialog(null, panel, "Select Date Range", JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {
            if (startDateChooser.getDate() != null && endDateChooser.getDate() != null) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String startDate = sdf.format(startDateChooser.getDate());
                String endDate = sdf.format(endDateChooser.getDate());
                try {
                    Date startDateDate = sdf.parse(startDate);
                    Date endDateDate = sdf.parse(endDate);
                    if (endDateDate.compareTo(startDateDate) >= 0) {
                        dateRange.put("startDate", startDate);
                        dateRange.put("endDate", endDate);
                    } else {
                        JOptionPane.showMessageDialog(this, "Invalid date range", "WARNING", JOptionPane.ERROR_MESSAGE);
                        dateRange.put("startDate", null);
                        dateRange.put("endDate", null);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please select date range", "Report Date Range", JOptionPane.INFORMATION_MESSAGE);
                reportTypes.clearSelection();
                dateRange.put("startDate", null);
                dateRange.put("endDate", null);
            }
        }
        return dateRange;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanel2;
    private javax.swing.JPanel JPanel3;
    private javax.swing.JPanel JPanel4;
    private javax.swing.JPanel JPanel5;
    private javax.swing.JButton backButton4;
    private javax.swing.JButton backButton5;
    private javax.swing.JButton backButton6;
    private javax.swing.JButton backButton7;
    private javax.swing.JButton exportLowStockReportButton;
    private javax.swing.JButton exportPpeDispatchedReportButton;
    private javax.swing.JButton exportPpeReceivedReportButton;
    private javax.swing.JButton exportPpeReportButton;
    private javax.swing.JPanel generateReportPanel;
    private javax.swing.JTextField itemCode;
    private javax.swing.JTextField itemCode1;
    private javax.swing.JTextField itemCode2;
    private javax.swing.JTextField itemCode3;
    private javax.swing.JPanel itemDetails;
    private javax.swing.JPanel itemDetails1;
    private javax.swing.JPanel itemDetails2;
    private javax.swing.JPanel itemDetails3;
    private javax.swing.JTable itemDispatchedTable;
    private javax.swing.JLabel itemName1;
    private javax.swing.JLabel itemName10;
    private javax.swing.JLabel itemName2;
    private javax.swing.JLabel itemName3;
    private javax.swing.JLabel itemName4;
    private javax.swing.JLabel itemName5;
    private javax.swing.JLabel itemName6;
    private javax.swing.JLabel itemName7;
    private javax.swing.JLabel itemName8;
    private javax.swing.JLabel itemName9;
    private javax.swing.JTable itemReceivedTable;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel itemTitle;
    private javax.swing.JLabel itemTitle1;
    private javax.swing.JLabel itemTitle2;
    private javax.swing.JLabel itemTitle3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JRadioButton lowStockReport;
    private javax.swing.JTextField lowStockReportDate;
    private javax.swing.JTextField lowStockReportGeneratedBy;
    private javax.swing.JScrollPane lowStockReports;
    private javax.swing.JTable lowStockTable;
    private javax.swing.JRadioButton ppeDispatchedReport;
    private javax.swing.JTextField ppeDispatchedReportEndDate;
    private javax.swing.JTextField ppeDispatchedReportGeneratedBy;
    private javax.swing.JTextField ppeDispatchedReportStartDate;
    private javax.swing.JScrollPane ppeDispatchedReports;
    private javax.swing.JScrollPane ppeInventoryReports;
    private javax.swing.JRadioButton ppeReceiveReport;
    private javax.swing.JTextField ppeReceivedReportEndDate;
    private javax.swing.JTextField ppeReceivedReportGeneratedBy;
    private javax.swing.JTextField ppeReceivedReportStartDate;
    private javax.swing.JScrollPane ppeReceivedReports;
    private javax.swing.JRadioButton ppeReportButton;
    private javax.swing.JTextField ppeReportDate;
    private javax.swing.JTextField ppeReportGeneratedBy;
    private javax.swing.ButtonGroup reportTypes;
    private javax.swing.JPanel selectReportPanel;
    private javax.swing.JTable totalStockDistributedTable;
    private javax.swing.JTable totalStockReceivedTable;
    private javax.swing.JTable transactionTable1;
    // End of variables declaration//GEN-END:variables
}
