/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mycom.gui.manager;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import mycom.gui.admin.*;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import mycom.controllers.UserController;
import mycom.models.PPEItem;
import mycom.services.PPEManagement;
import mycom.services.UserManagement;
import mycom.utils.WordProcessing;

/**
 *
 * @author sheaw
 */
public class ManagerViewInventory extends javax.swing.JInternalFrame {
    UserController usrCtrl;

    /**
     * Creates new form AdminUserManagement
     */
    public ManagerViewInventory(UserController usrCtrl) {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null); // set the top frame thingy null
        
        viewInventoryPanel.removeAll();
        viewInventoryPanel.add(allItemsPanel);
        viewInventoryPanel.repaint();
        viewInventoryPanel.revalidate();
        
        this.usrCtrl = usrCtrl;
        if (this.usrCtrl.getActiveUser().type.equalsIgnoreCase("super admin")) {
            this.usrCtrl.updateActiveUser(UserManagement.getSuperAdmin());
        } else {
            this.usrCtrl.updateActiveUser(UserManagement.getUserById(this.usrCtrl.getActiveUser().getId()));
        }
        loadItems();
    }
    
    public void loadItems() {
        DefaultTableModel model = (DefaultTableModel) itemTable.getModel();
        model.setRowCount(0);
//        UserManagement usrServices = this.usrCtrl.getUserServices();
        List<PPEItem> allItems = this.usrCtrl.getPPEController().getAllPPEItems();
        for (PPEItem item: allItems) {
            String[] itemData = {item.getCode(), WordProcessing.capitalizeEachWord(item.getName())};
            model.addRow(itemData);
        }
        itemTable.revalidate();
        itemTable.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        transactionTable1 = new javax.swing.JTable();
        viewInventoryPanel = new javax.swing.JPanel();
        allItemsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchBar = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        sortButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        viewButton = new javax.swing.JButton();
        itemDetailsPanel = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();
        itemTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        itemName1 = new javax.swing.JLabel();
        itemDetails = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        itemCode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        itemName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        itemAvailableQuantity = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        itemName2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        transactionTable = new javax.swing.JTable();
        backButton4 = new javax.swing.JButton();

        transactionTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        transactionTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TRANSACTION TYPE", "QUANTITY", "DATE", "ENTITY INVOLVED"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transactionTable1.setRowHeight(30);
        jScrollPane4.setViewportView(transactionTable1);

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(770, 642));

        viewInventoryPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewInventoryPanel.setAutoscrolls(true);
        viewInventoryPanel.setPreferredSize(new java.awt.Dimension(770, 642));
        viewInventoryPanel.setLayout(new java.awt.CardLayout());

        allItemsPanel.setBackground(new java.awt.Color(255, 255, 255));
        allItemsPanel.setAutoscrolls(true);
        allItemsPanel.setPreferredSize(new java.awt.Dimension(770, 642));
        allItemsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("View Inventory");
        allItemsPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        searchBar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchBar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20)));
        allItemsPanel.add(searchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 89, 351, 38));

        searchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        allItemsPanel.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 89, 110, 38));

        sortButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sortButton.setText("Sort by Code");
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });
        allItemsPanel.add(sortButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, -1, 38));

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PPE ITEM CODE", "PPE ITEM NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable.setIntercellSpacing(new java.awt.Dimension(5, 10));
        itemTable.setRowHeight(30);
        jScrollPane2.setViewportView(itemTable);

        allItemsPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 157, 672, 300));

        viewButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });
        allItemsPanel.add(viewButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(589, 487, 133, 38));

        viewInventoryPanel.add(allItemsPanel, "card3");

        itemDetailsPanel.setBorder(null);
        itemDetailsPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setMinimumSize(new java.awt.Dimension(770, 725));
        panel.setPreferredSize(new java.awt.Dimension(770, 725));
        panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        itemTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        itemTitle.setText("Item Name");
        panel.add(itemTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        jSeparator1.setForeground(new java.awt.Color(102, 102, 102));
        panel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 690, 10));

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        panel.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 690, 20));

        itemName1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName1.setText("Item Details");
        panel.add(itemName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 120, 700, -1));

        itemDetails.setBackground(new java.awt.Color(255, 255, 255));
        itemDetails.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, new java.awt.Color(204, 204, 204)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Item Code");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText(":");

        itemCode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemCode.setText("HC");
        itemCode.setBorder(null);
        itemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCodeActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Item Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText(":");

        itemName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemName.setText("Head Cover");
        itemName.setBorder(null);
        itemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNameActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Available Quantity");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText(":");

        itemAvailableQuantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemAvailableQuantity.setText("80");
        itemAvailableQuantity.setBorder(null);
        itemAvailableQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAvailableQuantityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout itemDetailsLayout = new javax.swing.GroupLayout(itemDetails);
        itemDetails.setLayout(itemDetailsLayout);
        itemDetailsLayout.setHorizontalGroup(
            itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(itemDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(itemAvailableQuantity))
                    .addGroup(itemDetailsLayout.createSequentialGroup()
                        .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itemName)
                            .addComponent(itemCode))))
                .addContainerGap(469, Short.MAX_VALUE))
        );
        itemDetailsLayout.setVerticalGroup(
            itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(itemAvailableQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        panel.add(itemDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 690, -1));

        jSeparator2.setForeground(new java.awt.Color(102, 102, 102));
        panel.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 690, 10));

        jSeparator4.setForeground(new java.awt.Color(102, 102, 102));
        panel.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 690, 10));

        itemName2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemName2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemName2.setText("Transaction History");
        panel.add(itemName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 340, 690, 30));

        transactionTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TRANSACTION TYPE", "QUANTITY", "DATE", "ENTITY INVOLVED"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transactionTable.setRowHeight(30);
        jScrollPane3.setViewportView(transactionTable);

        panel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 690, 270));

        backButton4.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        backButton4.setText("↑");
        backButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton4ActionPerformed(evt);
            }
        });
        panel.add(backButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 59, -1));

        itemDetailsPanel.setViewportView(panel);

        viewInventoryPanel.add(itemDetailsPanel, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(viewInventoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(viewInventoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        int selectedRow = itemTable.getSelectedRow();
        System.out.println(itemTable.getRowCount());
        System.out.println(selectedRow);
        if (selectedRow != -1) {
            String code = itemTable.getValueAt(selectedRow, 0).toString();
            // card layout
            viewInventoryPanel.removeAll();
            viewInventoryPanel.add(itemDetailsPanel);
            viewInventoryPanel.repaint();
            viewInventoryPanel.revalidate();
            showItemDetailsPanel(code);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row first", "Advice", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void itemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCodeActionPerformed

    private void itemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNameActionPerformed

    private void itemAvailableQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAvailableQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemAvailableQuantityActionPerformed

    private void backButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton4ActionPerformed
        viewInventoryPanel.removeAll();
        viewInventoryPanel.add(allItemsPanel);
        viewInventoryPanel.repaint();
        viewInventoryPanel.revalidate();
    }//GEN-LAST:event_backButton4ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String keyword = searchBar.getText();
        List<PPEItem> searchResults = this.usrCtrl.getPPEController().searchPPEItems(keyword);
        DefaultTableModel model = (DefaultTableModel) itemTable.getModel();
        model.setRowCount(0);
        for (PPEItem item: searchResults) {
            String[] itemData = {item.getCode(), WordProcessing.capitalizeEachWord(item.getName())};
            model.addRow(itemData);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) itemTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        itemTable.setRowSorter(sorter);
        sorter.setSortKeys(Arrays.asList(new RowSorter.SortKey(0, SortOrder.ASCENDING)));
    }//GEN-LAST:event_sortButtonActionPerformed

    private void showItemDetailsPanel(String code) {
        PPEItem item = PPEManagement.getPPEItemByCode(code);
        itemTitle.setText(item.getName());
        itemCode.setText(item.getCode());
        itemName.setText(item.getName());
        itemAvailableQuantity.setText(String.valueOf(item.getQuantity()));
        DefaultTableModel model = (DefaultTableModel) transactionTable.getModel();
        model.setRowCount(0);
        ArrayList<LinkedHashMap<String, String>> transactionRecords = PPEManagement.getTransactionRecords();
        if (transactionRecords != null) {
            for (LinkedHashMap<String, String> record: transactionRecords) {
                if(record.get("itemCode").equals(item.getCode())) {
                    String[] recordData = {WordProcessing.capitalizeEachWord(record.get("transactionType")), record.get("quantity"), record.get("date"), record.get("entityInvolved")};
                    model.addRow(recordData);
                }
            }
            transactionTable = new JTable(model);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel allItemsPanel;
    private javax.swing.JButton backButton4;
    private javax.swing.JTextField itemAvailableQuantity;
    private javax.swing.JTextField itemCode;
    private javax.swing.JPanel itemDetails;
    private javax.swing.JScrollPane itemDetailsPanel;
    private javax.swing.JTextField itemName;
    private javax.swing.JLabel itemName1;
    private javax.swing.JLabel itemName2;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel itemTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton sortButton;
    private javax.swing.JTable transactionTable;
    private javax.swing.JTable transactionTable1;
    private javax.swing.JButton viewButton;
    private javax.swing.JPanel viewInventoryPanel;
    // End of variables declaration//GEN-END:variables
}
